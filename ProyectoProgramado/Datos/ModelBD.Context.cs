//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entidad
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PedidosExpressEntities : DbContext
    {
        public PedidosExpressEntities()
            : base("name=PedidosExpressEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Estado> Estado { get; set; }
        public virtual DbSet<MecanismoContacto> MecanismoContacto { get; set; }
        public virtual DbSet<Party> Party { get; set; }
        public virtual DbSet<Pedido> Pedido { get; set; }
        public virtual DbSet<Plato> Plato { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TipoMecanismo> TipoMecanismo { get; set; }
        public virtual DbSet<TipoUsuario> TipoUsuario { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual int p_agregarCliente(string partyIDR, string primerNombreR, string segundoNombreR, string apellido1R, string apellido2R, string contraseñaR, Nullable<short> mecanismoIDR, string valorMecanismoR, Nullable<short> tipoMecanismoIDR)
        {
            var partyIDRParameter = partyIDR != null ?
                new ObjectParameter("PartyIDR", partyIDR) :
                new ObjectParameter("PartyIDR", typeof(string));
    
            var primerNombreRParameter = primerNombreR != null ?
                new ObjectParameter("PrimerNombreR", primerNombreR) :
                new ObjectParameter("PrimerNombreR", typeof(string));
    
            var segundoNombreRParameter = segundoNombreR != null ?
                new ObjectParameter("SegundoNombreR", segundoNombreR) :
                new ObjectParameter("SegundoNombreR", typeof(string));
    
            var apellido1RParameter = apellido1R != null ?
                new ObjectParameter("Apellido1R", apellido1R) :
                new ObjectParameter("Apellido1R", typeof(string));
    
            var apellido2RParameter = apellido2R != null ?
                new ObjectParameter("Apellido2R", apellido2R) :
                new ObjectParameter("Apellido2R", typeof(string));
    
            var contraseñaRParameter = contraseñaR != null ?
                new ObjectParameter("ContraseñaR", contraseñaR) :
                new ObjectParameter("ContraseñaR", typeof(string));
    
            var mecanismoIDRParameter = mecanismoIDR.HasValue ?
                new ObjectParameter("MecanismoIDR", mecanismoIDR) :
                new ObjectParameter("MecanismoIDR", typeof(short));
    
            var valorMecanismoRParameter = valorMecanismoR != null ?
                new ObjectParameter("ValorMecanismoR", valorMecanismoR) :
                new ObjectParameter("ValorMecanismoR", typeof(string));
    
            var tipoMecanismoIDRParameter = tipoMecanismoIDR.HasValue ?
                new ObjectParameter("TipoMecanismoIDR", tipoMecanismoIDR) :
                new ObjectParameter("TipoMecanismoIDR", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_agregarCliente", partyIDRParameter, primerNombreRParameter, segundoNombreRParameter, apellido1RParameter, apellido2RParameter, contraseñaRParameter, mecanismoIDRParameter, valorMecanismoRParameter, tipoMecanismoIDRParameter);
        }
    
        public virtual int p_agregarMecanismo(Nullable<short> mecanismoID, string valorMecanismo, Nullable<short> tipoMecanismoID, string partyID)
        {
            var mecanismoIDParameter = mecanismoID.HasValue ?
                new ObjectParameter("MecanismoID", mecanismoID) :
                new ObjectParameter("MecanismoID", typeof(short));
    
            var valorMecanismoParameter = valorMecanismo != null ?
                new ObjectParameter("ValorMecanismo", valorMecanismo) :
                new ObjectParameter("ValorMecanismo", typeof(string));
    
            var tipoMecanismoIDParameter = tipoMecanismoID.HasValue ?
                new ObjectParameter("TipoMecanismoID", tipoMecanismoID) :
                new ObjectParameter("TipoMecanismoID", typeof(short));
    
            var partyIDParameter = partyID != null ?
                new ObjectParameter("PartyID", partyID) :
                new ObjectParameter("PartyID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_agregarMecanismo", mecanismoIDParameter, valorMecanismoParameter, tipoMecanismoIDParameter, partyIDParameter);
        }
    
        public virtual int p_agregarParty(string primerNombre, string segundoNombre, string apellido1, string apellido2, string contraseña, string partyID)
        {
            var primerNombreParameter = primerNombre != null ?
                new ObjectParameter("PrimerNombre", primerNombre) :
                new ObjectParameter("PrimerNombre", typeof(string));
    
            var segundoNombreParameter = segundoNombre != null ?
                new ObjectParameter("SegundoNombre", segundoNombre) :
                new ObjectParameter("SegundoNombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("Contraseña", contraseña) :
                new ObjectParameter("Contraseña", typeof(string));
    
            var partyIDParameter = partyID != null ?
                new ObjectParameter("PartyID", partyID) :
                new ObjectParameter("PartyID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_agregarParty", primerNombreParameter, segundoNombreParameter, apellido1Parameter, apellido2Parameter, contraseñaParameter, partyIDParameter);
        }
    
        public virtual int p_agregarPlato(Nullable<int> platoID, string nombre, string descripcion, Nullable<decimal> precio, byte[] fotografia, Nullable<bool> habilitadoSN, Nullable<int> pedidoID)
        {
            var platoIDParameter = platoID.HasValue ?
                new ObjectParameter("PlatoID", platoID) :
                new ObjectParameter("PlatoID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var fotografiaParameter = fotografia != null ?
                new ObjectParameter("Fotografia", fotografia) :
                new ObjectParameter("Fotografia", typeof(byte[]));
    
            var habilitadoSNParameter = habilitadoSN.HasValue ?
                new ObjectParameter("HabilitadoSN", habilitadoSN) :
                new ObjectParameter("HabilitadoSN", typeof(bool));
    
            var pedidoIDParameter = pedidoID.HasValue ?
                new ObjectParameter("PedidoID", pedidoID) :
                new ObjectParameter("PedidoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_agregarPlato", platoIDParameter, nombreParameter, descripcionParameter, precioParameter, fotografiaParameter, habilitadoSNParameter, pedidoIDParameter);
        }
    
        public virtual int p_agregarUsuario(string partyID, Nullable<byte> tipoID)
        {
            var partyIDParameter = partyID != null ?
                new ObjectParameter("PartyID", partyID) :
                new ObjectParameter("PartyID", typeof(string));
    
            var tipoIDParameter = tipoID.HasValue ?
                new ObjectParameter("TipoID", tipoID) :
                new ObjectParameter("TipoID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_agregarUsuario", partyIDParameter, tipoIDParameter);
        }
    
        public virtual int p_agregarUsuarioAdmin(string primerNombreR, string segundoNombreR, string apellido1R, string apellido2R, string contraseñaR, Nullable<short> mecanismoIDR, string valorMecanismoR, Nullable<short> tipoMecanismoIDR, string partyIDR)
        {
            var primerNombreRParameter = primerNombreR != null ?
                new ObjectParameter("PrimerNombreR", primerNombreR) :
                new ObjectParameter("PrimerNombreR", typeof(string));
    
            var segundoNombreRParameter = segundoNombreR != null ?
                new ObjectParameter("SegundoNombreR", segundoNombreR) :
                new ObjectParameter("SegundoNombreR", typeof(string));
    
            var apellido1RParameter = apellido1R != null ?
                new ObjectParameter("Apellido1R", apellido1R) :
                new ObjectParameter("Apellido1R", typeof(string));
    
            var apellido2RParameter = apellido2R != null ?
                new ObjectParameter("Apellido2R", apellido2R) :
                new ObjectParameter("Apellido2R", typeof(string));
    
            var contraseñaRParameter = contraseñaR != null ?
                new ObjectParameter("ContraseñaR", contraseñaR) :
                new ObjectParameter("ContraseñaR", typeof(string));
    
            var mecanismoIDRParameter = mecanismoIDR.HasValue ?
                new ObjectParameter("MecanismoIDR", mecanismoIDR) :
                new ObjectParameter("MecanismoIDR", typeof(short));
    
            var valorMecanismoRParameter = valorMecanismoR != null ?
                new ObjectParameter("ValorMecanismoR", valorMecanismoR) :
                new ObjectParameter("ValorMecanismoR", typeof(string));
    
            var tipoMecanismoIDRParameter = tipoMecanismoIDR.HasValue ?
                new ObjectParameter("TipoMecanismoIDR", tipoMecanismoIDR) :
                new ObjectParameter("TipoMecanismoIDR", typeof(short));
    
            var partyIDRParameter = partyIDR != null ?
                new ObjectParameter("PartyIDR", partyIDR) :
                new ObjectParameter("PartyIDR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_agregarUsuarioAdmin", primerNombreRParameter, segundoNombreRParameter, apellido1RParameter, apellido2RParameter, contraseñaRParameter, mecanismoIDRParameter, valorMecanismoRParameter, tipoMecanismoIDRParameter, partyIDRParameter);
        }
    
        public virtual int p_agregarUsuarioCocina(string primerNombreR, string segundoNombreR, string apellido1R, string apellido2R, string contraseñaR, Nullable<short> mecanismoIDR, string valorMecanismoR, Nullable<short> tipoMecanismoIDR, string partyIDR)
        {
            var primerNombreRParameter = primerNombreR != null ?
                new ObjectParameter("PrimerNombreR", primerNombreR) :
                new ObjectParameter("PrimerNombreR", typeof(string));
    
            var segundoNombreRParameter = segundoNombreR != null ?
                new ObjectParameter("SegundoNombreR", segundoNombreR) :
                new ObjectParameter("SegundoNombreR", typeof(string));
    
            var apellido1RParameter = apellido1R != null ?
                new ObjectParameter("Apellido1R", apellido1R) :
                new ObjectParameter("Apellido1R", typeof(string));
    
            var apellido2RParameter = apellido2R != null ?
                new ObjectParameter("Apellido2R", apellido2R) :
                new ObjectParameter("Apellido2R", typeof(string));
    
            var contraseñaRParameter = contraseñaR != null ?
                new ObjectParameter("ContraseñaR", contraseñaR) :
                new ObjectParameter("ContraseñaR", typeof(string));
    
            var mecanismoIDRParameter = mecanismoIDR.HasValue ?
                new ObjectParameter("MecanismoIDR", mecanismoIDR) :
                new ObjectParameter("MecanismoIDR", typeof(short));
    
            var valorMecanismoRParameter = valorMecanismoR != null ?
                new ObjectParameter("ValorMecanismoR", valorMecanismoR) :
                new ObjectParameter("ValorMecanismoR", typeof(string));
    
            var tipoMecanismoIDRParameter = tipoMecanismoIDR.HasValue ?
                new ObjectParameter("TipoMecanismoIDR", tipoMecanismoIDR) :
                new ObjectParameter("TipoMecanismoIDR", typeof(short));
    
            var partyIDRParameter = partyIDR != null ?
                new ObjectParameter("PartyIDR", partyIDR) :
                new ObjectParameter("PartyIDR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_agregarUsuarioCocina", primerNombreRParameter, segundoNombreRParameter, apellido1RParameter, apellido2RParameter, contraseñaRParameter, mecanismoIDRParameter, valorMecanismoRParameter, tipoMecanismoIDRParameter, partyIDRParameter);
        }
    
        public virtual int p_modificarMecanismo(string valorMecanismoNuevo, string valorMecanismo, Nullable<short> tipoMecanismoID, Nullable<short> mecanismoID, string partyID)
        {
            var valorMecanismoNuevoParameter = valorMecanismoNuevo != null ?
                new ObjectParameter("ValorMecanismoNuevo", valorMecanismoNuevo) :
                new ObjectParameter("ValorMecanismoNuevo", typeof(string));
    
            var valorMecanismoParameter = valorMecanismo != null ?
                new ObjectParameter("ValorMecanismo", valorMecanismo) :
                new ObjectParameter("ValorMecanismo", typeof(string));
    
            var tipoMecanismoIDParameter = tipoMecanismoID.HasValue ?
                new ObjectParameter("TipoMecanismoID", tipoMecanismoID) :
                new ObjectParameter("TipoMecanismoID", typeof(short));
    
            var mecanismoIDParameter = mecanismoID.HasValue ?
                new ObjectParameter("MecanismoID", mecanismoID) :
                new ObjectParameter("MecanismoID", typeof(short));
    
            var partyIDParameter = partyID != null ?
                new ObjectParameter("PartyID", partyID) :
                new ObjectParameter("PartyID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_modificarMecanismo", valorMecanismoNuevoParameter, valorMecanismoParameter, tipoMecanismoIDParameter, mecanismoIDParameter, partyIDParameter);
        }
    
        public virtual int p_modificarParty(string primerNombre, string segundoNombre, string apellido1, string apellido2, string contraseña, string partyID)
        {
            var primerNombreParameter = primerNombre != null ?
                new ObjectParameter("PrimerNombre", primerNombre) :
                new ObjectParameter("PrimerNombre", typeof(string));
    
            var segundoNombreParameter = segundoNombre != null ?
                new ObjectParameter("SegundoNombre", segundoNombre) :
                new ObjectParameter("SegundoNombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("Contraseña", contraseña) :
                new ObjectParameter("Contraseña", typeof(string));
    
            var partyIDParameter = partyID != null ?
                new ObjectParameter("PartyID", partyID) :
                new ObjectParameter("PartyID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_modificarParty", primerNombreParameter, segundoNombreParameter, apellido1Parameter, apellido2Parameter, contraseñaParameter, partyIDParameter);
        }
    
        public virtual int p_modificarPlato(Nullable<int> platoID, string nombre, string descripcion, Nullable<decimal> precio, byte[] fotografia, Nullable<bool> habilitadoSN, Nullable<int> pedidoID)
        {
            var platoIDParameter = platoID.HasValue ?
                new ObjectParameter("PlatoID", platoID) :
                new ObjectParameter("PlatoID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var fotografiaParameter = fotografia != null ?
                new ObjectParameter("Fotografia", fotografia) :
                new ObjectParameter("Fotografia", typeof(byte[]));
    
            var habilitadoSNParameter = habilitadoSN.HasValue ?
                new ObjectParameter("HabilitadoSN", habilitadoSN) :
                new ObjectParameter("HabilitadoSN", typeof(bool));
    
            var pedidoIDParameter = pedidoID.HasValue ?
                new ObjectParameter("PedidoID", pedidoID) :
                new ObjectParameter("PedidoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_modificarPlato", platoIDParameter, nombreParameter, descripcionParameter, precioParameter, fotografiaParameter, habilitadoSNParameter, pedidoIDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
